/* Resetボタンのアイコンを親ボタンの:hoverで回転 */
.chakra-button:hover .reset-icon {
  transform: rotate(180deg);
}
.chakra-button .reset-icon {
  transition: transform 0.3s ease;
}
/* --- vimapp globals.css: 洗練されたプロフェッショナルデザイン --- */
@import url("https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@200;300;400;500;600;700;800&family=Fira+Code:wght@300;400;500;600;700&family=Inter:wght@300;400;500;600;700&display=swap");

html,
body {
  margin: 0;
  padding: 0;
  min-height: 100vh;
  box-sizing: border-box;
  font-family: "Inter", -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica,
    Arial, sans-serif;
  font-feature-settings: "cv02", "cv03", "cv04", "cv11";
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* 洗練されたスクロールバーデザイン */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

::-webkit-scrollbar-track {
  background: rgba(26, 26, 30, 0.8);
  border-radius: 4px;
  border: 1px solid rgba(232, 131, 58, 0.1);
}

::-webkit-scrollbar-thumb {
  background: linear-gradient(
    180deg,
    rgba(232, 131, 58, 0.8),
    rgba(232, 131, 58, 0.6)
  );
  border-radius: 4px;
  border: 1px solid rgba(232, 131, 58, 0.3);
  transition: all 0.2s ease;
}

::-webkit-scrollbar-thumb:hover {
  background: linear-gradient(
    180deg,
    rgba(232, 131, 58, 0.9),
    rgba(232, 131, 58, 0.7)
  );
  border-color: rgba(232, 131, 58, 0.5);
  box-shadow: 0 0 8px rgba(232, 131, 58, 0.3);
}

/* 洗練された選択テキストのスタイル */
::selection {
  background: rgba(232, 131, 58, 0.25);
  color: white;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
}

::-moz-selection {
  background: rgba(232, 131, 58, 0.25);
  color: white;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
}

/* 洗練されたローディング状態 */
.loading {
  background: linear-gradient(
    90deg,
    rgba(26, 26, 30, 0.8) 25%,
    rgba(232, 131, 58, 0.1) 50%,
    rgba(26, 26, 30, 0.8) 75%
  );
  background-size: 200% 100%;
  animation: shimmer 2s infinite ease-in-out;
}

@keyframes shimmer {
  0% {
    background-position: -200% 0;
  }

  100% {
    background-position: 200% 0;
  }
}

/* フォーカス状態の改善 - エディタ内要素への影響を防ぐ */
button:focus-visible,
input:focus-visible,
textarea:focus-visible,
select:focus-visible,
[role="button"]:focus-visible,
[role="menuitem"]:focus-visible,
[role="tab"]:focus-visible,
[tabindex]:focus-visible:not([tabindex="-1"]) {
  outline: 2px solid rgba(232, 131, 58, 0.6);
  outline-offset: 2px;
  border-radius: 4px;
}

/* ボタンやインタラクティブ要素の基本スタイル */
button,
[role="button"] {
  cursor: pointer;
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Button hover isolation - prevent effects from cascading to editor */
button:hover,
[data-theme] button:hover,
.chakra-button:hover {
  contain: layout style !important;
  isolation: isolate !important;
}

/* Completely isolate editor content from any parent hover effects */
.cm-editor {
  transform: translateZ(0) !important; /* Force GPU layer */
  will-change: auto !important;
  backface-visibility: hidden !important;
  pointer-events: auto !important; /* Ensure editor interactions work */
}

/* Block inheritance of transform, filter, and backdrop effects that could cause glowing */
.cm-editor,
.cm-content,
.cm-line {
  text-shadow: none !important;
  box-shadow: none !important;
}

/* CodeMirror editor content protection from hover effects */
.cm-editor,
.cm-content,
.cm-line,
.CodeMirror,
.CodeMirror-lines,
.CodeMirror-line {
  isolation: isolate !important;
  position: relative !important;
  z-index: 2 !important;
}

/* Prevent unwanted inheritance of hover/focus effects - but preserve syntax highlighting */
.cm-editor * {
  box-shadow: none !important;
  text-shadow: none !important;
  outline: none !important;
  border: none !important;
}

/* CodeMirrorエディタのフォーカス状態は独自に管理 */
.cm-editor.cm-focused {
  outline: none;
}
